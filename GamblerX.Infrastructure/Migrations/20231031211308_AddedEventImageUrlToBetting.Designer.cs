// <auto-generated />
using System;
using GamblerX.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamblerX.Infrastructure.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231031211308_AddedEventImageUrlToBetting")]
    partial class AddedEventImageUrlToBetting
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GamblerX.Domain.Entities.Betting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BetCountTeam1")
                        .HasColumnType("int");

                    b.Property<int>("BetCountTeam2")
                        .HasColumnType("int");

                    b.Property<string>("EventImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("MinimumBetValue")
                        .HasColumnType("float");

                    b.Property<double>("TotalBetValueTeam1")
                        .HasColumnType("float");

                    b.Property<double>("TotalBetValueTeam2")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Bettings");
                });

            modelBuilder.Entity("GamblerX.Domain.Entities.Bettor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmountBet")
                        .HasColumnType("float");

                    b.Property<Guid>("BettingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TeamSelected")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Bettors");
                });

            modelBuilder.Entity("GamblerX.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
